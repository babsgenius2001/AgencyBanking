//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace JaizAgencyBanking.Quickteller {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_QuickTellerService", Namespace="http://services.interswitchng.com/quicktellerservice/")]
    public partial class QuickTellerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateUserSecurityTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestBillersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeaturedBillersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillerPaymentItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillerCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoBillPaymentInquiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendBillPaymentAdviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCustomerBillerAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerBillerAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerPaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBillerCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCollectionsAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBillersCollectionsAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditCustomerBillerAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResendActivationTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoCustomProcessingOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBillerOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyBillerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSessionKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthoriseCashOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthoriseAccountCashOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseCashOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatusCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemSettingsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public QuickTellerService() {
            this.Url = global::JaizAgencyBanking.Properties.Settings.Default.JaizOpenDigitalBanking_Quickteller_QuickTellerService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateUserCompletedEventHandler CreateUserCompleted;
        
        /// <remarks/>
        public event ActivateUserCompletedEventHandler ActivateUserCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event AuthenticateUserCompletedEventHandler AuthenticateUserCompleted;
        
        /// <remarks/>
        public event AuthenticateUserSecurityTokenCompletedEventHandler AuthenticateUserSecurityTokenCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetBillersCompletedEventHandler GetBillersCompleted;
        
        /// <remarks/>
        public event GetLatestBillersCompletedEventHandler GetLatestBillersCompleted;
        
        /// <remarks/>
        public event GetFeaturedBillersCompletedEventHandler GetFeaturedBillersCompleted;
        
        /// <remarks/>
        public event GetBillerPaymentItemsCompletedEventHandler GetBillerPaymentItemsCompleted;
        
        /// <remarks/>
        public event GetBillerCategoriesCompletedEventHandler GetBillerCategoriesCompleted;
        
        /// <remarks/>
        public event DoBillPaymentInquiryCompletedEventHandler DoBillPaymentInquiryCompleted;
        
        /// <remarks/>
        public event AuthenticateCustomerCompletedEventHandler AuthenticateCustomerCompleted;
        
        /// <remarks/>
        public event SendBillPaymentAdviceCompletedEventHandler SendBillPaymentAdviceCompleted;
        
        /// <remarks/>
        public event SendPaymentsCompletedEventHandler SendPaymentsCompleted;
        
        /// <remarks/>
        public event AddCustomerBillerAccountCompletedEventHandler AddCustomerBillerAccountCompleted;
        
        /// <remarks/>
        public event GetCustomerBillerAccountsCompletedEventHandler GetCustomerBillerAccountsCompleted;
        
        /// <remarks/>
        public event GetCustomerPaymentsCompletedEventHandler GetCustomerPaymentsCompleted;
        
        /// <remarks/>
        public event AddBillerCustomerCompletedEventHandler AddBillerCustomerCompleted;
        
        /// <remarks/>
        public event GetCollectionsAccountCompletedEventHandler GetCollectionsAccountCompleted;
        
        /// <remarks/>
        public event GetBillersCollectionsAccountCompletedEventHandler GetBillersCollectionsAccountCompleted;
        
        /// <remarks/>
        public event EditCustomerBillerAccountCompletedEventHandler EditCustomerBillerAccountCompleted;
        
        /// <remarks/>
        public event ResendActivationTokenCompletedEventHandler ResendActivationTokenCompleted;
        
        /// <remarks/>
        public event DoCustomProcessingCompletedEventHandler DoCustomProcessingCompleted;
        
        /// <remarks/>
        public event CreateBillerCompletedEventHandler CreateBillerCompleted;
        
        /// <remarks/>
        public event VerifyBillerCompletedEventHandler VerifyBillerCompleted;
        
        /// <remarks/>
        public event ValidateCustomerCompletedEventHandler ValidateCustomerCompleted;
        
        /// <remarks/>
        public event DoTransferCompletedEventHandler DoTransferCompleted;
        
        /// <remarks/>
        public event CancelTransferCompletedEventHandler CancelTransferCompleted;
        
        /// <remarks/>
        public event SendSessionKeyCompletedEventHandler SendSessionKeyCompleted;
        
        /// <remarks/>
        public event QueryTransferCompletedEventHandler QueryTransferCompleted;
        
        /// <remarks/>
        public event AuthoriseCashOutCompletedEventHandler AuthoriseCashOutCompleted;
        
        /// <remarks/>
        public event AuthoriseAccountCashOutCompletedEventHandler AuthoriseAccountCashOutCompleted;
        
        /// <remarks/>
        public event ReverseCashOutCompletedEventHandler ReverseCashOutCompleted;
        
        /// <remarks/>
        public event StatusCheckCompletedEventHandler StatusCheckCompleted;
        
        /// <remarks/>
        public event QueryTransactionCompletedEventHandler QueryTransactionCompleted;
        
        /// <remarks/>
        public event GetSystemSettingsCompletedEventHandler GetSystemSettingsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CreateUser", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreateUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("CreateUser", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserAsync(string xmlParams) {
            this.CreateUserAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void CreateUserAsync(string xmlParams, object userState) {
            if ((this.CreateUserOperationCompleted == null)) {
                this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
            }
            this.InvokeAsync("CreateUser", new object[] {
                        xmlParams}, this.CreateUserOperationCompleted, userState);
        }
        
        private void OnCreateUserOperationCompleted(object arg) {
            if ((this.CreateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ActivateUser", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ActivateUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("ActivateUser", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateUserAsync(string xmlParams) {
            this.ActivateUserAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void ActivateUserAsync(string xmlParams, object userState) {
            if ((this.ActivateUserOperationCompleted == null)) {
                this.ActivateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateUserOperationCompleted);
            }
            this.InvokeAsync("ActivateUser", new object[] {
                        xmlParams}, this.ActivateUserOperationCompleted, userState);
        }
        
        private void OnActivateUserOperationCompleted(object arg) {
            if ((this.ActivateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateUserCompleted(this, new ActivateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("UpdateUser", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UpdateUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string xmlParams) {
            this.UpdateUserAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string xmlParams, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        xmlParams}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ChangePassword", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ChangePassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string xmlParams) {
            this.ChangePasswordAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string xmlParams, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        xmlParams}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ResetPassword", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ResetPassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string xmlParams) {
            this.ResetPasswordAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(string xmlParams, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        xmlParams}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("AuthenticateUser", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthenticateUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("AuthenticateUser", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string xmlParams) {
            this.AuthenticateUserAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string xmlParams, object userState) {
            if ((this.AuthenticateUserOperationCompleted == null)) {
                this.AuthenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser", new object[] {
                        xmlParams}, this.AuthenticateUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserOperationCompleted(object arg) {
            if ((this.AuthenticateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("AuthenticateUserSecurityToken", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthenticateUserSecurityToken([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("AuthenticateUserSecurityToken", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserSecurityTokenAsync(string xmlParams) {
            this.AuthenticateUserSecurityTokenAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void AuthenticateUserSecurityTokenAsync(string xmlParams, object userState) {
            if ((this.AuthenticateUserSecurityTokenOperationCompleted == null)) {
                this.AuthenticateUserSecurityTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserSecurityTokenOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUserSecurityToken", new object[] {
                        xmlParams}, this.AuthenticateUserSecurityTokenOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserSecurityTokenOperationCompleted(object arg) {
            if ((this.AuthenticateUserSecurityTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserSecurityTokenCompleted(this, new AuthenticateUserSecurityTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetUser", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("GetUser", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(string xmlParams) {
            this.GetUserAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(string xmlParams, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        xmlParams}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetBillers", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetBillers([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("GetBillers", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillersAsync(string xmlParams) {
            this.GetBillersAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void GetBillersAsync(string xmlParams, object userState) {
            if ((this.GetBillersOperationCompleted == null)) {
                this.GetBillersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillersOperationCompleted);
            }
            this.InvokeAsync("GetBillers", new object[] {
                        xmlParams}, this.GetBillersOperationCompleted, userState);
        }
        
        private void OnGetBillersOperationCompleted(object arg) {
            if ((this.GetBillersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillersCompleted(this, new GetBillersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetLatestBillers", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetLatestBillers() {
            object[] results = this.Invoke("GetLatestBillers", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestBillersAsync() {
            this.GetLatestBillersAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestBillersAsync(object userState) {
            if ((this.GetLatestBillersOperationCompleted == null)) {
                this.GetLatestBillersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestBillersOperationCompleted);
            }
            this.InvokeAsync("GetLatestBillers", new object[0], this.GetLatestBillersOperationCompleted, userState);
        }
        
        private void OnGetLatestBillersOperationCompleted(object arg) {
            if ((this.GetLatestBillersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestBillersCompleted(this, new GetLatestBillersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetFeaturedBillers", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetFeaturedBillers([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("GetFeaturedBillers", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeaturedBillersAsync(string xmlParams) {
            this.GetFeaturedBillersAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void GetFeaturedBillersAsync(string xmlParams, object userState) {
            if ((this.GetFeaturedBillersOperationCompleted == null)) {
                this.GetFeaturedBillersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeaturedBillersOperationCompleted);
            }
            this.InvokeAsync("GetFeaturedBillers", new object[] {
                        xmlParams}, this.GetFeaturedBillersOperationCompleted, userState);
        }
        
        private void OnGetFeaturedBillersOperationCompleted(object arg) {
            if ((this.GetFeaturedBillersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeaturedBillersCompleted(this, new GetFeaturedBillersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetBillerPaymentItems", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetBillerPaymentItems([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("GetBillerPaymentItems", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillerPaymentItemsAsync(string xmlParams) {
            this.GetBillerPaymentItemsAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void GetBillerPaymentItemsAsync(string xmlParams, object userState) {
            if ((this.GetBillerPaymentItemsOperationCompleted == null)) {
                this.GetBillerPaymentItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillerPaymentItemsOperationCompleted);
            }
            this.InvokeAsync("GetBillerPaymentItems", new object[] {
                        xmlParams}, this.GetBillerPaymentItemsOperationCompleted, userState);
        }
        
        private void OnGetBillerPaymentItemsOperationCompleted(object arg) {
            if ((this.GetBillerPaymentItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillerPaymentItemsCompleted(this, new GetBillerPaymentItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetBillerCategories", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetBillerCategories() {
            object[] results = this.Invoke("GetBillerCategories", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillerCategoriesAsync() {
            this.GetBillerCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void GetBillerCategoriesAsync(object userState) {
            if ((this.GetBillerCategoriesOperationCompleted == null)) {
                this.GetBillerCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillerCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetBillerCategories", new object[0], this.GetBillerCategoriesOperationCompleted, userState);
        }
        
        private void OnGetBillerCategoriesOperationCompleted(object arg) {
            if ((this.GetBillerCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillerCategoriesCompleted(this, new GetBillerCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DoBillPaymentInquiry", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DoBillPaymentInquiry([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("DoBillPaymentInquiry", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoBillPaymentInquiryAsync(string xmlParams) {
            this.DoBillPaymentInquiryAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void DoBillPaymentInquiryAsync(string xmlParams, object userState) {
            if ((this.DoBillPaymentInquiryOperationCompleted == null)) {
                this.DoBillPaymentInquiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoBillPaymentInquiryOperationCompleted);
            }
            this.InvokeAsync("DoBillPaymentInquiry", new object[] {
                        xmlParams}, this.DoBillPaymentInquiryOperationCompleted, userState);
        }
        
        private void OnDoBillPaymentInquiryOperationCompleted(object arg) {
            if ((this.DoBillPaymentInquiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoBillPaymentInquiryCompleted(this, new DoBillPaymentInquiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("AuthenticateCustomer", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthenticateCustomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("AuthenticateCustomer", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateCustomerAsync(string xmlParams) {
            this.AuthenticateCustomerAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void AuthenticateCustomerAsync(string xmlParams, object userState) {
            if ((this.AuthenticateCustomerOperationCompleted == null)) {
                this.AuthenticateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateCustomerOperationCompleted);
            }
            this.InvokeAsync("AuthenticateCustomer", new object[] {
                        xmlParams}, this.AuthenticateCustomerOperationCompleted, userState);
        }
        
        private void OnAuthenticateCustomerOperationCompleted(object arg) {
            if ((this.AuthenticateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCustomerCompleted(this, new AuthenticateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SendBillPaymentAdvice", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SendBillPaymentAdvice([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("SendBillPaymentAdvice", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendBillPaymentAdviceAsync(string xmlParams) {
            this.SendBillPaymentAdviceAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void SendBillPaymentAdviceAsync(string xmlParams, object userState) {
            if ((this.SendBillPaymentAdviceOperationCompleted == null)) {
                this.SendBillPaymentAdviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendBillPaymentAdviceOperationCompleted);
            }
            this.InvokeAsync("SendBillPaymentAdvice", new object[] {
                        xmlParams}, this.SendBillPaymentAdviceOperationCompleted, userState);
        }
        
        private void OnSendBillPaymentAdviceOperationCompleted(object arg) {
            if ((this.SendBillPaymentAdviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendBillPaymentAdviceCompleted(this, new SendBillPaymentAdviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SendPayments", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SendPayments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("SendPayments", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendPaymentsAsync(string xmlParams) {
            this.SendPaymentsAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void SendPaymentsAsync(string xmlParams, object userState) {
            if ((this.SendPaymentsOperationCompleted == null)) {
                this.SendPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPaymentsOperationCompleted);
            }
            this.InvokeAsync("SendPayments", new object[] {
                        xmlParams}, this.SendPaymentsOperationCompleted, userState);
        }
        
        private void OnSendPaymentsOperationCompleted(object arg) {
            if ((this.SendPaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPaymentsCompleted(this, new SendPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("AddCustomerBillerAccount", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AddCustomerBillerAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("AddCustomerBillerAccount", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCustomerBillerAccountAsync(string xmlParams) {
            this.AddCustomerBillerAccountAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void AddCustomerBillerAccountAsync(string xmlParams, object userState) {
            if ((this.AddCustomerBillerAccountOperationCompleted == null)) {
                this.AddCustomerBillerAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCustomerBillerAccountOperationCompleted);
            }
            this.InvokeAsync("AddCustomerBillerAccount", new object[] {
                        xmlParams}, this.AddCustomerBillerAccountOperationCompleted, userState);
        }
        
        private void OnAddCustomerBillerAccountOperationCompleted(object arg) {
            if ((this.AddCustomerBillerAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCustomerBillerAccountCompleted(this, new AddCustomerBillerAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetCustomerBillerAccounts", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetCustomerBillerAccounts([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("GetCustomerBillerAccounts", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerBillerAccountsAsync(string xmlParams) {
            this.GetCustomerBillerAccountsAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void GetCustomerBillerAccountsAsync(string xmlParams, object userState) {
            if ((this.GetCustomerBillerAccountsOperationCompleted == null)) {
                this.GetCustomerBillerAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerBillerAccountsOperationCompleted);
            }
            this.InvokeAsync("GetCustomerBillerAccounts", new object[] {
                        xmlParams}, this.GetCustomerBillerAccountsOperationCompleted, userState);
        }
        
        private void OnGetCustomerBillerAccountsOperationCompleted(object arg) {
            if ((this.GetCustomerBillerAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerBillerAccountsCompleted(this, new GetCustomerBillerAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetCustomerPayments", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetCustomerPayments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("GetCustomerPayments", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerPaymentsAsync(string xmlParams) {
            this.GetCustomerPaymentsAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void GetCustomerPaymentsAsync(string xmlParams, object userState) {
            if ((this.GetCustomerPaymentsOperationCompleted == null)) {
                this.GetCustomerPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerPaymentsOperationCompleted);
            }
            this.InvokeAsync("GetCustomerPayments", new object[] {
                        xmlParams}, this.GetCustomerPaymentsOperationCompleted, userState);
        }
        
        private void OnGetCustomerPaymentsOperationCompleted(object arg) {
            if ((this.GetCustomerPaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerPaymentsCompleted(this, new GetCustomerPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("AddBillerCustomer", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AddBillerCustomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("AddBillerCustomer", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddBillerCustomerAsync(string xmlParams) {
            this.AddBillerCustomerAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void AddBillerCustomerAsync(string xmlParams, object userState) {
            if ((this.AddBillerCustomerOperationCompleted == null)) {
                this.AddBillerCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBillerCustomerOperationCompleted);
            }
            this.InvokeAsync("AddBillerCustomer", new object[] {
                        xmlParams}, this.AddBillerCustomerOperationCompleted, userState);
        }
        
        private void OnAddBillerCustomerOperationCompleted(object arg) {
            if ((this.AddBillerCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBillerCustomerCompleted(this, new AddBillerCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetCollectionsAccount", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetCollectionsAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("GetCollectionsAccount", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCollectionsAccountAsync(string xmlParams) {
            this.GetCollectionsAccountAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void GetCollectionsAccountAsync(string xmlParams, object userState) {
            if ((this.GetCollectionsAccountOperationCompleted == null)) {
                this.GetCollectionsAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCollectionsAccountOperationCompleted);
            }
            this.InvokeAsync("GetCollectionsAccount", new object[] {
                        xmlParams}, this.GetCollectionsAccountOperationCompleted, userState);
        }
        
        private void OnGetCollectionsAccountOperationCompleted(object arg) {
            if ((this.GetCollectionsAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCollectionsAccountCompleted(this, new GetCollectionsAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetBillersCollectionsAccount", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetBillersCollectionsAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("GetBillersCollectionsAccount", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBillersCollectionsAccountAsync(string xmlParams) {
            this.GetBillersCollectionsAccountAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void GetBillersCollectionsAccountAsync(string xmlParams, object userState) {
            if ((this.GetBillersCollectionsAccountOperationCompleted == null)) {
                this.GetBillersCollectionsAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBillersCollectionsAccountOperationCompleted);
            }
            this.InvokeAsync("GetBillersCollectionsAccount", new object[] {
                        xmlParams}, this.GetBillersCollectionsAccountOperationCompleted, userState);
        }
        
        private void OnGetBillersCollectionsAccountOperationCompleted(object arg) {
            if ((this.GetBillersCollectionsAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBillersCollectionsAccountCompleted(this, new GetBillersCollectionsAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("EditCustomerBillerAccount", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EditCustomerBillerAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("EditCustomerBillerAccount", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditCustomerBillerAccountAsync(string xmlParams) {
            this.EditCustomerBillerAccountAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void EditCustomerBillerAccountAsync(string xmlParams, object userState) {
            if ((this.EditCustomerBillerAccountOperationCompleted == null)) {
                this.EditCustomerBillerAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditCustomerBillerAccountOperationCompleted);
            }
            this.InvokeAsync("EditCustomerBillerAccount", new object[] {
                        xmlParams}, this.EditCustomerBillerAccountOperationCompleted, userState);
        }
        
        private void OnEditCustomerBillerAccountOperationCompleted(object arg) {
            if ((this.EditCustomerBillerAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCustomerBillerAccountCompleted(this, new EditCustomerBillerAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ResendActivationToken", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ResendActivationToken([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("ResendActivationToken", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResendActivationTokenAsync(string xmlParams) {
            this.ResendActivationTokenAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void ResendActivationTokenAsync(string xmlParams, object userState) {
            if ((this.ResendActivationTokenOperationCompleted == null)) {
                this.ResendActivationTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResendActivationTokenOperationCompleted);
            }
            this.InvokeAsync("ResendActivationToken", new object[] {
                        xmlParams}, this.ResendActivationTokenOperationCompleted, userState);
        }
        
        private void OnResendActivationTokenOperationCompleted(object arg) {
            if ((this.ResendActivationTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResendActivationTokenCompleted(this, new ResendActivationTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DoCustomProcessing", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DoCustomProcessing([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("DoCustomProcessing", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoCustomProcessingAsync(string xmlParams) {
            this.DoCustomProcessingAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void DoCustomProcessingAsync(string xmlParams, object userState) {
            if ((this.DoCustomProcessingOperationCompleted == null)) {
                this.DoCustomProcessingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoCustomProcessingOperationCompleted);
            }
            this.InvokeAsync("DoCustomProcessing", new object[] {
                        xmlParams}, this.DoCustomProcessingOperationCompleted, userState);
        }
        
        private void OnDoCustomProcessingOperationCompleted(object arg) {
            if ((this.DoCustomProcessingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoCustomProcessingCompleted(this, new DoCustomProcessingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CreateBiller", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreateBiller([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("CreateBiller", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateBillerAsync(string xmlParams) {
            this.CreateBillerAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void CreateBillerAsync(string xmlParams, object userState) {
            if ((this.CreateBillerOperationCompleted == null)) {
                this.CreateBillerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBillerOperationCompleted);
            }
            this.InvokeAsync("CreateBiller", new object[] {
                        xmlParams}, this.CreateBillerOperationCompleted, userState);
        }
        
        private void OnCreateBillerOperationCompleted(object arg) {
            if ((this.CreateBillerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBillerCompleted(this, new CreateBillerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("VerifyBiller", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string VerifyBiller([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("VerifyBiller", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyBillerAsync(string xmlParams) {
            this.VerifyBillerAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void VerifyBillerAsync(string xmlParams, object userState) {
            if ((this.VerifyBillerOperationCompleted == null)) {
                this.VerifyBillerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyBillerOperationCompleted);
            }
            this.InvokeAsync("VerifyBiller", new object[] {
                        xmlParams}, this.VerifyBillerOperationCompleted, userState);
        }
        
        private void OnVerifyBillerOperationCompleted(object arg) {
            if ((this.VerifyBillerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyBillerCompleted(this, new VerifyBillerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ValidateCustomer", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ValidateCustomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("ValidateCustomer", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateCustomerAsync(string xmlParams) {
            this.ValidateCustomerAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void ValidateCustomerAsync(string xmlParams, object userState) {
            if ((this.ValidateCustomerOperationCompleted == null)) {
                this.ValidateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateCustomerOperationCompleted);
            }
            this.InvokeAsync("ValidateCustomer", new object[] {
                        xmlParams}, this.ValidateCustomerOperationCompleted, userState);
        }
        
        private void OnValidateCustomerOperationCompleted(object arg) {
            if ((this.ValidateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateCustomerCompleted(this, new ValidateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("DoTransfer", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DoTransfer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("DoTransfer", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoTransferAsync(string xmlParams) {
            this.DoTransferAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void DoTransferAsync(string xmlParams, object userState) {
            if ((this.DoTransferOperationCompleted == null)) {
                this.DoTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoTransferOperationCompleted);
            }
            this.InvokeAsync("DoTransfer", new object[] {
                        xmlParams}, this.DoTransferOperationCompleted, userState);
        }
        
        private void OnDoTransferOperationCompleted(object arg) {
            if ((this.DoTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoTransferCompleted(this, new DoTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CancelTransfer", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CancelTransfer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("CancelTransfer", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelTransferAsync(string xmlParams) {
            this.CancelTransferAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void CancelTransferAsync(string xmlParams, object userState) {
            if ((this.CancelTransferOperationCompleted == null)) {
                this.CancelTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTransferOperationCompleted);
            }
            this.InvokeAsync("CancelTransfer", new object[] {
                        xmlParams}, this.CancelTransferOperationCompleted, userState);
        }
        
        private void OnCancelTransferOperationCompleted(object arg) {
            if ((this.CancelTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTransferCompleted(this, new CancelTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("SendSessionKey", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SendSessionKey([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("SendSessionKey", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSessionKeyAsync(string xmlParams) {
            this.SendSessionKeyAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void SendSessionKeyAsync(string xmlParams, object userState) {
            if ((this.SendSessionKeyOperationCompleted == null)) {
                this.SendSessionKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSessionKeyOperationCompleted);
            }
            this.InvokeAsync("SendSessionKey", new object[] {
                        xmlParams}, this.SendSessionKeyOperationCompleted, userState);
        }
        
        private void OnSendSessionKeyOperationCompleted(object arg) {
            if ((this.SendSessionKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSessionKeyCompleted(this, new SendSessionKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("QueryTransfer", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string QueryTransfer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("QueryTransfer", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTransferAsync(string xmlParams) {
            this.QueryTransferAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void QueryTransferAsync(string xmlParams, object userState) {
            if ((this.QueryTransferOperationCompleted == null)) {
                this.QueryTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTransferOperationCompleted);
            }
            this.InvokeAsync("QueryTransfer", new object[] {
                        xmlParams}, this.QueryTransferOperationCompleted, userState);
        }
        
        private void OnQueryTransferOperationCompleted(object arg) {
            if ((this.QueryTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTransferCompleted(this, new QueryTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("AuthoriseCashOut", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthoriseCashOut([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("AuthoriseCashOut", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthoriseCashOutAsync(string xmlParams) {
            this.AuthoriseCashOutAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void AuthoriseCashOutAsync(string xmlParams, object userState) {
            if ((this.AuthoriseCashOutOperationCompleted == null)) {
                this.AuthoriseCashOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthoriseCashOutOperationCompleted);
            }
            this.InvokeAsync("AuthoriseCashOut", new object[] {
                        xmlParams}, this.AuthoriseCashOutOperationCompleted, userState);
        }
        
        private void OnAuthoriseCashOutOperationCompleted(object arg) {
            if ((this.AuthoriseCashOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthoriseCashOutCompleted(this, new AuthoriseCashOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("AuthoriseAccountCashOut", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthoriseAccountCashOut([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("AuthoriseAccountCashOut", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthoriseAccountCashOutAsync(string xmlParams) {
            this.AuthoriseAccountCashOutAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void AuthoriseAccountCashOutAsync(string xmlParams, object userState) {
            if ((this.AuthoriseAccountCashOutOperationCompleted == null)) {
                this.AuthoriseAccountCashOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthoriseAccountCashOutOperationCompleted);
            }
            this.InvokeAsync("AuthoriseAccountCashOut", new object[] {
                        xmlParams}, this.AuthoriseAccountCashOutOperationCompleted, userState);
        }
        
        private void OnAuthoriseAccountCashOutOperationCompleted(object arg) {
            if ((this.AuthoriseAccountCashOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthoriseAccountCashOutCompleted(this, new AuthoriseAccountCashOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ReverseCashOut", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReverseCashOut([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("ReverseCashOut", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReverseCashOutAsync(string xmlParams) {
            this.ReverseCashOutAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void ReverseCashOutAsync(string xmlParams, object userState) {
            if ((this.ReverseCashOutOperationCompleted == null)) {
                this.ReverseCashOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseCashOutOperationCompleted);
            }
            this.InvokeAsync("ReverseCashOut", new object[] {
                        xmlParams}, this.ReverseCashOutOperationCompleted, userState);
        }
        
        private void OnReverseCashOutOperationCompleted(object arg) {
            if ((this.ReverseCashOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseCashOutCompleted(this, new ReverseCashOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("StatusCheck", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StatusCheck() {
            object[] results = this.Invoke("StatusCheck", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StatusCheckAsync() {
            this.StatusCheckAsync(null);
        }
        
        /// <remarks/>
        public void StatusCheckAsync(object userState) {
            if ((this.StatusCheckOperationCompleted == null)) {
                this.StatusCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatusCheckOperationCompleted);
            }
            this.InvokeAsync("StatusCheck", new object[0], this.StatusCheckOperationCompleted, userState);
        }
        
        private void OnStatusCheckOperationCompleted(object arg) {
            if ((this.StatusCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatusCheckCompleted(this, new StatusCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("QueryTransaction", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string QueryTransaction([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("QueryTransaction", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTransactionAsync(string xmlParams) {
            this.QueryTransactionAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void QueryTransactionAsync(string xmlParams, object userState) {
            if ((this.QueryTransactionOperationCompleted == null)) {
                this.QueryTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTransactionOperationCompleted);
            }
            this.InvokeAsync("QueryTransaction", new object[] {
                        xmlParams}, this.QueryTransactionOperationCompleted, userState);
        }
        
        private void OnQueryTransactionOperationCompleted(object arg) {
            if ((this.QueryTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTransactionCompleted(this, new QueryTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetSystemSettings", RequestNamespace="http://services.interswitchng.com/quicktellerservice/", ResponseNamespace="http://services.interswitchng.com/quicktellerservice/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetSystemSettings([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xmlParams) {
            object[] results = this.Invoke("GetSystemSettings", new object[] {
                        xmlParams});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemSettingsAsync(string xmlParams) {
            this.GetSystemSettingsAsync(xmlParams, null);
        }
        
        /// <remarks/>
        public void GetSystemSettingsAsync(string xmlParams, object userState) {
            if ((this.GetSystemSettingsOperationCompleted == null)) {
                this.GetSystemSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemSettingsOperationCompleted);
            }
            this.InvokeAsync("GetSystemSettings", new object[] {
                        xmlParams}, this.GetSystemSettingsOperationCompleted, userState);
        }
        
        private void OnGetSystemSettingsOperationCompleted(object arg) {
            if ((this.GetSystemSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemSettingsCompleted(this, new GetSystemSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateUserCompletedEventHandler(object sender, CreateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ActivateUserCompletedEventHandler(object sender, ActivateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AuthenticateUserCompletedEventHandler(object sender, AuthenticateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AuthenticateUserSecurityTokenCompletedEventHandler(object sender, AuthenticateUserSecurityTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserSecurityTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUserSecurityTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBillersCompletedEventHandler(object sender, GetBillersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetLatestBillersCompletedEventHandler(object sender, GetLatestBillersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestBillersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestBillersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFeaturedBillersCompletedEventHandler(object sender, GetFeaturedBillersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeaturedBillersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeaturedBillersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBillerPaymentItemsCompletedEventHandler(object sender, GetBillerPaymentItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillerPaymentItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillerPaymentItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBillerCategoriesCompletedEventHandler(object sender, GetBillerCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillerCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillerCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DoBillPaymentInquiryCompletedEventHandler(object sender, DoBillPaymentInquiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoBillPaymentInquiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoBillPaymentInquiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AuthenticateCustomerCompletedEventHandler(object sender, AuthenticateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendBillPaymentAdviceCompletedEventHandler(object sender, SendBillPaymentAdviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendBillPaymentAdviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendBillPaymentAdviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendPaymentsCompletedEventHandler(object sender, SendPaymentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddCustomerBillerAccountCompletedEventHandler(object sender, AddCustomerBillerAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCustomerBillerAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCustomerBillerAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCustomerBillerAccountsCompletedEventHandler(object sender, GetCustomerBillerAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerBillerAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerBillerAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCustomerPaymentsCompletedEventHandler(object sender, GetCustomerPaymentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddBillerCustomerCompletedEventHandler(object sender, AddBillerCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBillerCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBillerCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCollectionsAccountCompletedEventHandler(object sender, GetCollectionsAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCollectionsAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCollectionsAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBillersCollectionsAccountCompletedEventHandler(object sender, GetBillersCollectionsAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBillersCollectionsAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBillersCollectionsAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void EditCustomerBillerAccountCompletedEventHandler(object sender, EditCustomerBillerAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCustomerBillerAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCustomerBillerAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ResendActivationTokenCompletedEventHandler(object sender, ResendActivationTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResendActivationTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResendActivationTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DoCustomProcessingCompletedEventHandler(object sender, DoCustomProcessingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoCustomProcessingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoCustomProcessingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateBillerCompletedEventHandler(object sender, CreateBillerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateBillerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateBillerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VerifyBillerCompletedEventHandler(object sender, VerifyBillerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyBillerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyBillerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ValidateCustomerCompletedEventHandler(object sender, ValidateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DoTransferCompletedEventHandler(object sender, DoTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelTransferCompletedEventHandler(object sender, CancelTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendSessionKeyCompletedEventHandler(object sender, SendSessionKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSessionKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSessionKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueryTransferCompletedEventHandler(object sender, QueryTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AuthoriseCashOutCompletedEventHandler(object sender, AuthoriseCashOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthoriseCashOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthoriseCashOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AuthoriseAccountCashOutCompletedEventHandler(object sender, AuthoriseAccountCashOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthoriseAccountCashOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthoriseAccountCashOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReverseCashOutCompletedEventHandler(object sender, ReverseCashOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverseCashOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReverseCashOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void StatusCheckCompletedEventHandler(object sender, StatusCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatusCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatusCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueryTransactionCompletedEventHandler(object sender, QueryTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSystemSettingsCompletedEventHandler(object sender, GetSystemSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591